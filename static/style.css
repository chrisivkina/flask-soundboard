:root {
    /* https://www.happyhues.co/palettes/4 */

    /* Elements */
    --background: #16161a;
    --button: #575757;
    --button-hover: #6c4bd8;
    --headline: #fffffe;
    --paragraph: #94a1b2;
    --headline-dark: #010101;
    --button-text: #fffffe;

    /* Stroke */
    --stroke: #010101;
    --secondary: #72757e;
    --main: #272727;
    --tertiary: #2cb67d;
    --highlight: #7f5af0;

    /* Custom */
    --button-good: #137800;
    --button-bad: #c50000;
}

body, html {
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
    background-color: var(--background);
    color: var(--headline);
}

* {
    touch-action: manipulation;
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* IE10+/Edge */
    user-select: none; /* Standard */
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    grid-gap: 10px;
    width: 100%;
}

.grid-1x4 {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 10px;
}

.grid-1x3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 10px;
}

.grid-1x2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 10px;
}

.grid-1x1 {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 10px;
}

button {
    padding: 20px;
    margin: 10px;
    background-color: var(--button);
    border: 2px solid #000;
    border-radius: 12px;
    cursor: pointer;
    font-size: 2rem;
}

.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 80px;
  background: rgb(0,172,33);
    background: linear-gradient(90deg, rgba(0,172,33,0.7) 0%, rgba(255,242,0,0.7) 65%, rgba(255,0,0,0.7) 100%);
  outline: none;
  -webkit-transition: .2s;
  transition: opacity .2s;
    border-radius:12px;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 80px;
  height: 80px;
  background: var(--button);
  cursor: pointer;
    border-radius:12px;
    background: url('/static/volume.png') no-repeat center;
  background-size: cover;
    border: var(--highlight) 8px solid;

}

.slider::-moz-range-thumb {
  width: 80px;
  height: 80px;
  background: var(--button);
  cursor: pointer;
    border-radius:12px;
    background: url('/static/volume.png') no-repeat center;
  background-size: cover;
    border: #fff 8px solid;

}

.fixed-footer {
    background-color: var(--main);
    position: sticky;
    left: 0;
    bottom: 0;
    width: 100%;
    text-align: center;
    border-top: 2px solid var(--highlight);
    padding-bottom: 10px;
    z-index: 1000; /* Ensure footer is above other content */
}

.flex-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* Ensures the container takes full height */
}

.flex-content {
  flex: 1; /* Pushes the footer down if content is short */
}

.context-menu {
    position: fixed;
    background-color: var(--main);
    border: 2px solid var(--highlight);
    border-radius: 12px;
    min-width: 200px;
    z-index: 1000;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.context-menu-item {
    padding: 12px 15px;
    cursor: pointer;
    font-size: 16px;
    color: var(--headline);
    border-bottom: 1px solid var(--secondary);
    display: flex;
    align-items: center;
    gap: 10px;
}

.context-menu-item:last-child {
    border-bottom: none;
}

.context-menu-item:hover {
    background-color: var(--button-hover);
}

.category-header {
    background-color: var(--highlight);
    padding: 10px;
    margin: 20px 40px 10px 20px;
    border-radius: 8px;
    font-weight: bold;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.draggable {
    cursor: grab;
}

.dragging {
    opacity: 0.5;
    cursor: grabbing;
}

.category-input {
    background-color: var(--main);
    color: var(--headline);
    border: 1px solid var(--highlight);
    padding: 8px;
    border-radius: 8px;
    margin-top: 5px;
}

.categories-container {
    display: flex;
    flex-direction: column;
    width: 100vw; /* Use 100vw as requested */
    box-sizing: border-box;
    gap: 20px; /* Use gap for spacing instead of margin on children */
}

.categories-container[data-layout="horizontal"] {
    flex-direction: row;
    align-items: stretch;
    align-content: flex-start;
}

.categories-container[data-layout="horizontal"] .category-container {
    flex: 0 0 auto; /* Don't grow, don't shrink, base size on content */
    min-width: 180px;
    max-width: none; /* Remove max-width restriction */
    width: auto !important; /* Force override with !important */
}

.category-container .resize-handle {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    width: 12px; /* Increased for easier dragging */
    height: 100%;
    background-color: var(--highlight);
    cursor: col-resize;
    z-index: 2;
}

.categories-container[data-layout="horizontal"] .category-container .resize-handle {
    display: block;
}

/* Sound button container using CSS Grid */
.sound-buttons-container {
    display: grid;
    /* Creates columns of minimum 180px that expand to fill space until a new column fits */
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    /*gap: 20px;*/
    width: 100%;
    padding: 10px;
    margin-right: 40px;
}

/* Sound button styles */
.sound_button {
    padding: 15px;
    margin: 0;
    background-color: var(--main);
    border-radius: 12px;
    cursor: pointer;
    font-size: 20px;
    text-align: center;
    text-transform: capitalize;
}

/* Consistent layout for horizontal mode */
.categories-container[data-layout="horizontal"] .sound-buttons-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    /*gap: 0px;*/
    /*width: 100%;*/
}

/* Ensure resize handle still works properly */
.category-container {
    margin-bottom: 0;
    margin-left: 0;
    position: relative;
    min-width: 180px;
    width: 100%; /* Changed from 100vw to 100% */
    box-sizing: border-box;
}

/* In vertical mode, make sure category containers and sound-buttons use full width */
.categories-container:not([data-layout="horizontal"]) .category-container {
    width: 100vw !important;
    flex: 1 1 100vw;
    min-width: 0;
}

.categories-container:not([data-layout="horizontal"]) .sound-buttons-container {
    width: 100% !important;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
}

/* In horizontal mode, let category containers flex to fill space unless user-resized */
.categories-container[data-layout="horizontal"] {
    flex-direction: row;
    align-items: stretch;
    align-content: flex-start;
}

.categories-container[data-layout="horizontal"] .category-container {
    flex: 1 1 0;
    /*min-width: 180px;*/
    max-width: 100%;
    width: auto;
    /* If a width is set inline (by resize), it will override this */
}

/* Override existing styles for horizontal layout */
.categories-container[data-layout="horizontal"] .sound_button {
    margin: 5px;
    /*width: 180px;*/
    flex-grow: 0;
    flex-shrink: 0;
}

