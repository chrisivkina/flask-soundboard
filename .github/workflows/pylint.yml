name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt

    - name: Run Pylint (require score â‰¥ 9.0)
      run: |
        echo "Running Pylint and enforcing minimum score of 9.0..."
        FILES=$(git ls-files '*.py')
        pylint --disable=C,R $FILES | tee pylint.log

        # Extract the score from the last line
        SCORE=$(tail -n 10 pylint.log | grep "Your code has been rated at" | awk '{print $7}' | cut -d'/' -f1)

        echo "Pylint score: $SCORE"

        # Compare score to threshold (fail if < 9.0)
        THRESHOLD=9.0
        result=$(awk -v s="$SCORE" -v t="$THRESHOLD" 'BEGIN { print (s>=t) ? "pass" : "fail" }')

        if [ "$result" = "fail" ]; then
          echo "Pylint score $SCORE is below threshold $THRESHOLD"
          exit 1
        else
          echo "Pylint score $SCORE meets the threshold"
        fi
    
